package StepDefination;

import org.junit.Assert;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.WebDriverWait;

import PageObject.AddNewCustomerPgae;
import PageObject.LoginPage;
import io.cucumber.java.en.*;
import io.github.bonigarcia.wdm.WebDriverManager;

public class StepDef {

	public WebDriver driver;
	public LoginPage loginpage;
	public AddNewCustomerPgae addnewcustomerpage;

	@Given("User Launch Chrome browser")
	public void user_launch_chrome_browser() {

		WebDriverManager.firefoxdriver().setup();
		driver = new FirefoxDriver();

		// driver = new EdgeDriver();
		loginpage = new LoginPage(driver);

	}

	@When("User opens URL {string}")
	public void user_opens_url(String url) throws InterruptedException {

		driver.get(url);
	}

	@When("User Enter Email as {string} and password as {string}")
	public void user_enter_email_as_and_password_as(String emailadd, String password) throws InterruptedException {

		Thread.sleep(2000);
		loginpage.enterEmail(emailadd);

		loginpage.enterPassword(password);

	}

	@When("Click on Login")
	public void click_on_login() {

		loginpage.ClickOnLoginButton();
	}

	@SuppressWarnings("deprecation")
	@Then("Page Title should be {string}")
	public void page_title_should_be(String expectedTitle) {

		String actualTitle = driver.getTitle();

		if (actualTitle.equals(expectedTitle)) {

			Assert.assertTrue(true);

		} else {

			Assert.assertTrue(false);
		}

		System.out.println(actualTitle);
	}

	@When("User click on Logout link")
	public void user_click_on_log_out_link() throws InterruptedException {

		Thread.sleep(2000);
		loginpage.ClickOnLogoutButton();
	}

	@Then("close browser")
	public void close_browser() {

		driver.close();

	}

/////// Add new Customer //////

	@Then("User can view Dashboard")
	public void user_can_view_dashboard() {

	}

	@When("User click on customers Menu")
	public void user_click_on_customers_menu() {

	}

	@When("Click on customers Menu Item")
	public void click_on_customers_menu_item() {

	}

	@When("Click on Add new Button")
	public void click_on_add_new_button() {

	}

	@Then("User can view add new customers page")
	public void user_can_view_add_new_customers_page() {

	}

	@When("User enter customer info")
	public void user_enter_customer_info() {

	}

	@When("Click on saave button")
	public void click_on_saave_button() {

	}

	@Then("User can view confirmation meassage {string}")
	public void user_can_view_confirmation_meassage(String string) {

	}

}